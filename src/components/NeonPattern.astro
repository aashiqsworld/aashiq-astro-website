---

---

<canvas id="glCanvas"></canvas>

<script id="fragmentShader" type="x-shader/x-fragment">

    precision mediump float;
    precision mediump int;

    #define PI 3.14159265359
    #define TWO_PI 6.28318530718

    uniform vec2 u_resolution;
    uniform vec2 u_mouse;
    uniform float u_time;

    vec2 random2( vec2 p ) {
        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);
    }

    // cosine based palette, 4 vec3 params
    vec3 palette( in float t)
    {
        vec3 a = vec3(0.5, 0.5, 0.5);
        vec3 b = vec3(0.5, 0.5, 0.5);
        vec3 c = vec3(1.0, 1.0, 1.0);
        vec3 d = vec3(0.3, 0.2, 0.2);
        return a + b*cos( 6.28318*(c*t+d) );
    }

    void main(){
        vec2 uv = (gl_FragCoord.xy / u_resolution.xy) * 2.0 - 1.5;
        uv.x *= u_resolution.x / u_resolution.y;
        vec2 uv0 = uv;
        vec3 finalColor = vec3(0.0);

        for(float i = 0.0; i < 4.0; i++)
        {
            uv = fract(uv * 1.3) - 0.5;

            float d = length(uv) * exp(-length(uv0));

            vec3 col = palette(length(uv0) + i*.4 + u_time*.2);

            d = sin(d*8.+u_time) / 8.;
            d = abs(d);
//            d = smoothstep(0.0, 0.5, d);

            d = pow(.003 / d, 1.);

            finalColor += col * d;
        }



        gl_FragColor = vec4(finalColor, 1);

    }
</script>

<script src='/test-app.js' type="module"/>